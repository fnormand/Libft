/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_lstmap.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: fnormand <fnormand@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2013/11/28 11:37:28 by fnormand          #+#    #+#             */
/*   Updated: 2013/12/10 11:47:23 by fnormand         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include "libft.h"

static void                ft_lstdelcontent(void *data, size_t size)
{
  if (data)
    free(data);
  size = 0;
}

t_list                        *ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))
{
  t_list        *prev_item;
  t_list        *new_item;
  t_list        *first_elem;

  prev_item = NULL;
  first_elem = NULL;
  while (lst)
    {
      new_item = (t_list *)malloc(sizeof(t_list));
      if (!new_item)
	{
	  if (first_elem)
	    ft_lstdel(&first_elem, ft_lstdelcontent);
	  return (NULL);
	}
      ft_memcpy(new_item, f(lst), sizeof(t_list));
      if (first_elem == NULL)
	first_elem = new_item;
      if (prev_item != NULL)
	prev_item->next = new_item;
      prev_item = new_item;
      lst = lst->next;
    }
  return (first_elem);
}
/*
t_list	*ft_lstmap(t_list *lst, t_list * (*f)(t_list *elem))
{
	t_list	*newlist;
	t_list	*tmp;
	t_list	*next;
	t_list	*tmp2;

	tmp = lst;
	newlist = ft_lstnew(tmp->content, tmp->content_size);
	f(newlist);
	if (tmp->next != NULL)
	{
		tmp = tmp->next;
		tmp2 = newlist;
	}
	while (tmp != NULL)
	{
		next = tmp->next;
		tmp2->next = ft_lstnew(tmp->content, tmp->content_size);
		tmp = next;
		f(tmp2->next);
		tmp2 = tmp2->next;
	}
	return (newlist);
}
*/
